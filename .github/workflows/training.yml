import mlflow
import pandas as pd
import numpy as np
from sklearn.model_selection import train_test_split
from sklearn.ensemble import RandomForestClassifier

def main():
    # Create sample data
    data = pd.DataFrame({
        'island': ['Biscoe'] * 100,
        'culmen_length_mm': np.random.normal(45, 5, 100),
        'culmen_depth_mm': np.random.normal(15, 2, 100),
        'flipper_length_mm': np.random.normal(200, 20, 100),
        'body_mass_g': np.random.normal(5000, 300, 100),
        'sex': np.random.choice(['MALE', 'FEMALE'], 100),
        'species': np.random.choice(['Adelie', 'Gentoo', 'Chinstrap'], 100)
    })
    
    # Prepare features
    X = data[['culmen_length_mm', 'culmen_depth_mm', 'flipper_length_mm', 'body_mass_g']]
    y = data['species']
    
    # Split data
    X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2)
    
    # Train model
    with mlflow.start_run():
        model = RandomForestClassifier()
        model.fit(X_train, y_train)
        accuracy = model.score(X_test, y_test)
        
        mlflow.log_param("model_type", "RandomForest")
        mlflow.log_metric("accuracy", accuracy)
        print(f"Training completed successfully! Accuracy: {accuracy}")

if __name__ == "__main__":
    main()